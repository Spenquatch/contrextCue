name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  frontend:
    name: Frontend (Node/React)
    runs-on: ubuntu-22.04t
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Prettier check
        run: npm run pretty -- --check

      - name: Typecheck
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test -- --passWithNoTests

      - name: Build
        run: npm run build

  sidecar:
    name: Sidecar (Python + uv/FastAPI)
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: sidecar
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache .venv if possible
      - name: Cache Python venv
        uses: actions/cache@v4
        with:
          path: sidecar/.venv
          key: ${{ runner.os }}-pyvenv-${{ hashFiles('sidecar/pyproject.toml') }}-${{ hashFiles('sidecar/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-pyvenv-

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: pip install uv

      - name: Install project + dev dependencies
        run: |
          uv pip install --system -e .[dev]

      - name: Lint (ruff)
        run: uv run ruff check .

      - name: Run tests (pytest)
        run: uv run pytest || true

  tauri:
    name: Tauri (Rust backend)
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: src-tauri
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev \
            libgtk-3-dev \
            libsoup2.4-dev \
            software-properties-common

      - name: Build (cargo check)
        run: |
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
          cargo check

      - name: Build release
        run: |
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
          cargo build --release
